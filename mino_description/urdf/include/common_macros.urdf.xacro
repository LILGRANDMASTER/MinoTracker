<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<!--           Include materials            -->
<xacro:include filename="./materials.urdf.xacro"/>
<!--########################################-->



<!--               Base xacro               -->

<xacro:macro name="base"
    params="link_name:='base_link' base_prop mesh:='' scale:=''">

    <link name="${link_name}">

    <xacro:box_inertia m="${base_prop['mass']}"
                       x="${base_prop['x_size']}"
                       y="${base_prop['y_size']}"
                       z="${base_prop['z_size']}">
    </xacro:box_inertia>

    <!-- if no 3d model -->
    <xacro:if value="${mesh == ''}">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${base_prop['x_size']} ${base_prop['y_size']} ${base_prop['z_size']}"/>
            </geometry>

            <material name="blue"/>
        </visual>
    </xacro:if>

    <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <geometry>
            <box size="${base_prop['x_size']} ${base_prop['y_size']} ${base_prop['z_size']}"/>
        </geometry>
    </collision>
    </link>
</xacro:macro>
<!--########################################-->


<!--            Footprint xacro              -->
<xacro:macro name="footprint"
    params="wheel_props">

    <link name="base_footprint"/>

    <joint name="base_to_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0.0 0.0 ${-(wheel_props['radius']) + wheel_props['z_offset']}" rpy="0.0 0.0 0.0"/>
    </joint>
</xacro:macro>
<!--######################################## -->


<!--               Wheel xacro               -->
<xacro:macro name="wheel"
    params="prefix reflect wheel_props base_props">

<xacro:property name="pos_x_joint"
    value="${(base_props['x_size']/2) - wheel_props['x_offset']}"/>

<xacro:property name="pos_y_joint"
    value="${(base_props['y_size']/2) + wheel_props['y_offset'] + (wheel_props['length']/2)}"/>

<xacro:property name="pos_z_joint" value="${wheel_props['z_offset']}"/>

    <link name="${prefix}_wheel">

    <xacro:cylinder_inertia m="${wheel_props['mass']}"
                            r="${wheel_props['radius']}"
                            l="${wheel_props['length']}">
    </xacro:cylinder_inertia>


    <!-- if no 3d model -->
    <xacro:if value="${wheel_props['mesh'] == ''}">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_props['radius']}" length="${wheel_props['length']}"/>
            </geometry>

            <material name="black"/>
        </visual>
    </xacro:if>

        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
            <geometry>
                <cylinder radius="${wheel_props['radius']}" length="${wheel_props['length']}"/>
            </geometry>
        </collision>
    </link>

    <joint name="${prefix}_wheel_joint" type="continuous">
        <axis xyz="0.0 1.0 0.0" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="${prefix}_wheel"/>

        <origin xyz="${pos_x_joint} ${reflect * pos_y_joint} ${pos_z_joint}" rpy="0.0 0.0 0.0"/>
    </joint>
</xacro:macro>
<!--########################################-->

<!--               Caster xacro               -->
<xacro:macro name="caster"
    params="link_name:='caster_link' caster_props">
    
    <link name="${link_name}">

    <xacro:sphere_inertia m="${caster_props['mass']}"
                          r="${caster_props['radius']}">
    </xacro:sphere_inertia>

    <xacro:if value="${caster_props['mesh'] == ''}">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="${caster_props['radius']}"/>
            </geometry>

            <material name="green"/>
        </visual>

        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="${caster_props['radius']}"/>
            </geometry>
        </collision>
    </xacro:if>
    </link>

    <joint name="$caster_joint" type="fixed">
        <parent link="base_link"/>
        <child link="${link_name}"/>

        <origin xyz="${caster_props['x_offset']} ${caster_props['y_offset']} ${caster_props['z_offset']}"
                rpy="0.0 0.0 0.0"/>
    </joint>    
</xacro:macro>
<!--##########################################-->

<!--               Lidar xacro                -->
<xacro:macro name="lidar"
    params="link_name:='lidar_link' lidar_props">

    <link name="${link_name}">

    <xacro:cylinder_inertia m="${lidar_props['mass']}"
                            r="${lidar_props['radius']}"
                            l="${lidar_props['length']}">
    </xacro:cylinder_inertia>

    <xacro:if value="${lidar_props['mesh'] == ''}">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${lidar_props['radius']}" length="${lidar_props['length']}"/>
            </geometry>

            <material name="red"/>
        </visual>

        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="${lidar_props['radius']}" length="${lidar_props['length']}"/>
            </geometry>
        </collision>        
    </xacro:if>
    </link>

    <joint name="lidar_joint" type="fixed">
        <parent link="base_link"/>
        <child link="${link_name}"/>
        
        <origin xyz="${lidar_props['x_offset']} ${lidar_props['y_offset']} ${lidar_props['z_offset']}"
                rpy="0.0 0.0 0.0"/>
    </joint>
</xacro:macro>
<!--##########################################-->


<!--               Box inertia                -->
<xacro:macro name="box_inertia" params="m x y z">
    <inertial>
        <mass value="${m}"/>
        <inertia ixx="${m / 12.0 * (y*y + z*z)}" ixy="0.0" ixz="0.0"
                 iyy="${m / 12.0 * (x*x + z*z)}" iyz="0.0"
                 izz="${m / 12.0 * (x*x + y*y)}"/>
        
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </inertial>

</xacro:macro>
<!--##########################################-->

<!--            Cylinder inertia              -->
<xacro:macro name="cylinder_inertia" params="m r l">
    <inertial>
        <mass value="${m}"/>
        <inertia ixx="${m * (3*r*r + l*l) / 12.0}" ixy="0.0" ixz="0.0"
                 iyy="${m * (3*r*r + l*l) / 12.0}" iyz="0.0"
                 izz="${m * r*r / 2.0}"/>
        
        <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
    </inertial>

</xacro:macro>
<!--##########################################-->

<!--             Sphere inertia               -->
<xacro:macro name="sphere_inertia" params="m r">
    <inertial>
        <mass value="${m}"/>
        <inertia ixx="${2.0 * m * (r*r) / 5.0}" ixy="0.0" ixz="0.0"
                 iyy="${2.0 * m * (r*r) / 5.0}" iyz="0.0"
                 izz="${2.0 * m * (r*r) / 5.0}"/>

        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </inertial>
</xacro:macro>
<!--##########################################-->
</robot>